# Workflow pour les branches de feature - analyses l√©g√®res
name: Feature Branch Security Analysis

on:
  workflow_call:
    inputs:
      frameworks:
        required: true
        type: string
      angular_version:
        required: false
        type: string
      node_version:
        required: false
        type: string
    secrets:
      SONAR_TOKEN:
        required: true
      SONAR_HOST_URL:
        required: true

permissions:
  contents: read
  issues: write

jobs:
  # Analyse des d√©pendances (rapide)
  dependency-check:
    name: üì¶ Dependency Analysis
    uses: ./.github/workflows/dependency-check.yml


  audit:
    name: Audit packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Audit packages
        run: npm audit --audit-level moderate
        env:
          CI: true
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
  build:
    name: Build with Node ${{ matrix.node_version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version:
          - 12
          - 14
          - 15
          - 16
          - 17
          - 18
    steps:
      - uses: actions/checkout@v3
      - id: build
        uses: ./.github/actions/build
        with:
          node_version: ${{ matrix.node_version }}
  
  
  # Analyse SonarQube (qualit√© du code)
  sonar-analysis:
    name: üîç Code Quality Analysis  
    uses: ./.github/workflows/sonar-scan.yml
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  # Notification rapide en cas de probl√®me
  feature-summary:
    name: üìã Feature Analysis Summary
    runs-on: ubuntu-latest
    needs: [dependency-check, sonar-analysis]
    if: always()
    steps:
      - name: Analysis Summary
        run: |
          echo "üîß Feature Branch Analysis Complete"
          echo "üì¶ Dependency Check: ${{ needs.dependency-check.result }}"
          echo "üîç SonarQube Analysis: ${{ needs.sonar-analysis.result }}"
          
          if [[ "${{ needs.dependency-check.result }}" == "failure" || "${{ needs.sonar-analysis.result }}" == "failure" ]]; then
            echo "‚ö†Ô∏è Some analyses failed - check logs for details"
            exit 1
          else
            echo "‚úÖ All analyses passed successfully"
          fi
